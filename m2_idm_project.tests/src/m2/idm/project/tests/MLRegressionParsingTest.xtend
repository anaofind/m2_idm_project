/*
 * generated by Xtext 2.23.0
 */
package m2.idm.project.tests

import com.google.inject.Inject
import m2.idm.project.mLRegression.MLRegression
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(MLRegressionInjectorProvider)
class MLRegressionParsingTest {
	@Inject
	ParseHelper<MLRegression> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			import "test.csv";
			partition : 80%, 20%;
			predictive_vars : "predict1","predict2";
			target_vars : "target1", "target2";
			calculate : min_square_error;
			algorithm : line_regress("column", "column2");
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
