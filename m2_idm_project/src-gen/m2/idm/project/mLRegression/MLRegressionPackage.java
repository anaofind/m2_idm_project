/**
 * generated by Xtext 2.23.0
 */
package m2.idm.project.mLRegression;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see m2.idm.project.mLRegression.MLRegressionFactory
 * @model kind="package"
 * @generated
 */
public interface MLRegressionPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "mLRegression";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.idm.m2/project/MLRegression";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "mLRegression";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MLRegressionPackage eINSTANCE = m2.idm.project.mLRegression.impl.MLRegressionPackageImpl.init();

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.ModelImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Language Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__LANGUAGE_TARGET = 0;

  /**
   * The feature id for the '<em><b>Ml</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__ML = 1;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.LanguageTargetImpl <em>Language Target</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.LanguageTargetImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getLanguageTarget()
   * @generated
   */
  int LANGUAGE_TARGET = 1;

  /**
   * The feature id for the '<em><b>Language</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LANGUAGE_TARGET__LANGUAGE = 0;

  /**
   * The number of structural features of the '<em>Language Target</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LANGUAGE_TARGET_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.MLRegressionImpl <em>ML Regression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.MLRegressionImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getMLRegression()
   * @generated
   */
  int ML_REGRESSION = 2;

  /**
   * The feature id for the '<em><b>Dataset</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML_REGRESSION__DATASET = 0;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML_REGRESSION__VARS = 1;

  /**
   * The feature id for the '<em><b>Evaluation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML_REGRESSION__EVALUATION = 2;

  /**
   * The feature id for the '<em><b>Algo</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML_REGRESSION__ALGO = 3;

  /**
   * The feature id for the '<em><b>Calculate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML_REGRESSION__CALCULATE = 4;

  /**
   * The feature id for the '<em><b>Loop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML_REGRESSION__LOOP = 5;

  /**
   * The number of structural features of the '<em>ML Regression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML_REGRESSION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.DatasetImpl <em>Dataset</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.DatasetImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getDataset()
   * @generated
   */
  int DATASET = 3;

  /**
   * The feature id for the '<em><b>Data Path</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATASET__DATA_PATH = 0;

  /**
   * The feature id for the '<em><b>Separator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATASET__SEPARATOR = 1;

  /**
   * The number of structural features of the '<em>Dataset</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATASET_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.VariablesImpl <em>Variables</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.VariablesImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getVariables()
   * @generated
   */
  int VARIABLES = 4;

  /**
   * The feature id for the '<em><b>Predictives</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLES__PREDICTIVES = 0;

  /**
   * The feature id for the '<em><b>Targets</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLES__TARGETS = 1;

  /**
   * The number of structural features of the '<em>Variables</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.PredictiveVarsImpl <em>Predictive Vars</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.PredictiveVarsImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getPredictiveVars()
   * @generated
   */
  int PREDICTIVE_VARS = 5;

  /**
   * The feature id for the '<em><b>Pred Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICTIVE_VARS__PRED_VAR = 0;

  /**
   * The number of structural features of the '<em>Predictive Vars</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICTIVE_VARS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.TargetVarsImpl <em>Target Vars</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.TargetVarsImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getTargetVars()
   * @generated
   */
  int TARGET_VARS = 6;

  /**
   * The feature id for the '<em><b>Target Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TARGET_VARS__TARGET_VAR = 0;

  /**
   * The number of structural features of the '<em>Target Vars</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TARGET_VARS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.EvaluationTypeImpl <em>Evaluation Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.EvaluationTypeImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getEvaluationType()
   * @generated
   */
  int EVALUATION_TYPE = 7;

  /**
   * The number of structural features of the '<em>Evaluation Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVALUATION_TYPE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.PartitionImpl <em>Partition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.PartitionImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getPartition()
   * @generated
   */
  int PARTITION = 8;

  /**
   * The feature id for the '<em><b>Test</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARTITION__TEST = EVALUATION_TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Partition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARTITION_FEATURE_COUNT = EVALUATION_TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.CrossValidationImpl <em>Cross Validation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.CrossValidationImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getCrossValidation()
   * @generated
   */
  int CROSS_VALIDATION = 9;

  /**
   * The feature id for the '<em><b>K</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CROSS_VALIDATION__K = EVALUATION_TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Cross Validation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CROSS_VALIDATION_FEATURE_COUNT = EVALUATION_TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.AlgoImpl <em>Algo</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.AlgoImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getAlgo()
   * @generated
   */
  int ALGO = 10;

  /**
   * The feature id for the '<em><b>Algo</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALGO__ALGO = 0;

  /**
   * The number of structural features of the '<em>Algo</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALGO_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.CalculateImpl <em>Calculate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.CalculateImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getCalculate()
   * @generated
   */
  int CALCULATE = 11;

  /**
   * The feature id for the '<em><b>Calculate Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATE__CALCULATE_TYPE = 0;

  /**
   * The number of structural features of the '<em>Calculate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.LoopImpl <em>Loop</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.LoopImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getLoop()
   * @generated
   */
  int LOOP = 12;

  /**
   * The feature id for the '<em><b>I</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP__I = 0;

  /**
   * The number of structural features of the '<em>Loop</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.NumericValueImpl <em>Numeric Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.NumericValueImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getNumericValue()
   * @generated
   */
  int NUMERIC_VALUE = 13;

  /**
   * The number of structural features of the '<em>Numeric Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_VALUE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.FLOATImpl <em>FLOAT</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.FLOATImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getFLOAT()
   * @generated
   */
  int FLOAT = 14;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT__VALUE = NUMERIC_VALUE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Decimal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT__DECIMAL = NUMERIC_VALUE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>FLOAT</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_FEATURE_COUNT = NUMERIC_VALUE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link m2.idm.project.mLRegression.impl.PERCENTImpl <em>PERCENT</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see m2.idm.project.mLRegression.impl.PERCENTImpl
   * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getPERCENT()
   * @generated
   */
  int PERCENT = 15;

  /**
   * The feature id for the '<em><b>Float</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERCENT__FLOAT = NUMERIC_VALUE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>PERCENT</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERCENT_FEATURE_COUNT = NUMERIC_VALUE_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see m2.idm.project.mLRegression.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.Model#getLanguageTarget <em>Language Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Language Target</em>'.
   * @see m2.idm.project.mLRegression.Model#getLanguageTarget()
   * @see #getModel()
   * @generated
   */
  EReference getModel_LanguageTarget();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.Model#getMl <em>Ml</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ml</em>'.
   * @see m2.idm.project.mLRegression.Model#getMl()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Ml();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.LanguageTarget <em>Language Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Language Target</em>'.
   * @see m2.idm.project.mLRegression.LanguageTarget
   * @generated
   */
  EClass getLanguageTarget();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.LanguageTarget#getLanguage <em>Language</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Language</em>'.
   * @see m2.idm.project.mLRegression.LanguageTarget#getLanguage()
   * @see #getLanguageTarget()
   * @generated
   */
  EAttribute getLanguageTarget_Language();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.MLRegression <em>ML Regression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>ML Regression</em>'.
   * @see m2.idm.project.mLRegression.MLRegression
   * @generated
   */
  EClass getMLRegression();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.MLRegression#getDataset <em>Dataset</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Dataset</em>'.
   * @see m2.idm.project.mLRegression.MLRegression#getDataset()
   * @see #getMLRegression()
   * @generated
   */
  EReference getMLRegression_Dataset();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.MLRegression#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vars</em>'.
   * @see m2.idm.project.mLRegression.MLRegression#getVars()
   * @see #getMLRegression()
   * @generated
   */
  EReference getMLRegression_Vars();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.MLRegression#getEvaluation <em>Evaluation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Evaluation</em>'.
   * @see m2.idm.project.mLRegression.MLRegression#getEvaluation()
   * @see #getMLRegression()
   * @generated
   */
  EReference getMLRegression_Evaluation();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.MLRegression#getAlgo <em>Algo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Algo</em>'.
   * @see m2.idm.project.mLRegression.MLRegression#getAlgo()
   * @see #getMLRegression()
   * @generated
   */
  EReference getMLRegression_Algo();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.MLRegression#getCalculate <em>Calculate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Calculate</em>'.
   * @see m2.idm.project.mLRegression.MLRegression#getCalculate()
   * @see #getMLRegression()
   * @generated
   */
  EReference getMLRegression_Calculate();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.MLRegression#getLoop <em>Loop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Loop</em>'.
   * @see m2.idm.project.mLRegression.MLRegression#getLoop()
   * @see #getMLRegression()
   * @generated
   */
  EReference getMLRegression_Loop();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.Dataset <em>Dataset</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dataset</em>'.
   * @see m2.idm.project.mLRegression.Dataset
   * @generated
   */
  EClass getDataset();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.Dataset#getDataPath <em>Data Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Data Path</em>'.
   * @see m2.idm.project.mLRegression.Dataset#getDataPath()
   * @see #getDataset()
   * @generated
   */
  EAttribute getDataset_DataPath();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.Dataset#getSeparator <em>Separator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Separator</em>'.
   * @see m2.idm.project.mLRegression.Dataset#getSeparator()
   * @see #getDataset()
   * @generated
   */
  EAttribute getDataset_Separator();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.Variables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variables</em>'.
   * @see m2.idm.project.mLRegression.Variables
   * @generated
   */
  EClass getVariables();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.Variables#getPredictives <em>Predictives</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predictives</em>'.
   * @see m2.idm.project.mLRegression.Variables#getPredictives()
   * @see #getVariables()
   * @generated
   */
  EReference getVariables_Predictives();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.Variables#getTargets <em>Targets</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Targets</em>'.
   * @see m2.idm.project.mLRegression.Variables#getTargets()
   * @see #getVariables()
   * @generated
   */
  EReference getVariables_Targets();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.PredictiveVars <em>Predictive Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Predictive Vars</em>'.
   * @see m2.idm.project.mLRegression.PredictiveVars
   * @generated
   */
  EClass getPredictiveVars();

  /**
   * Returns the meta object for the attribute list '{@link m2.idm.project.mLRegression.PredictiveVars#getPredVar <em>Pred Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Pred Var</em>'.
   * @see m2.idm.project.mLRegression.PredictiveVars#getPredVar()
   * @see #getPredictiveVars()
   * @generated
   */
  EAttribute getPredictiveVars_PredVar();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.TargetVars <em>Target Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Target Vars</em>'.
   * @see m2.idm.project.mLRegression.TargetVars
   * @generated
   */
  EClass getTargetVars();

  /**
   * Returns the meta object for the attribute list '{@link m2.idm.project.mLRegression.TargetVars#getTargetVar <em>Target Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Target Var</em>'.
   * @see m2.idm.project.mLRegression.TargetVars#getTargetVar()
   * @see #getTargetVars()
   * @generated
   */
  EAttribute getTargetVars_TargetVar();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.EvaluationType <em>Evaluation Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Evaluation Type</em>'.
   * @see m2.idm.project.mLRegression.EvaluationType
   * @generated
   */
  EClass getEvaluationType();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.Partition <em>Partition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Partition</em>'.
   * @see m2.idm.project.mLRegression.Partition
   * @generated
   */
  EClass getPartition();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.Partition#getTest <em>Test</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Test</em>'.
   * @see m2.idm.project.mLRegression.Partition#getTest()
   * @see #getPartition()
   * @generated
   */
  EReference getPartition_Test();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.CrossValidation <em>Cross Validation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cross Validation</em>'.
   * @see m2.idm.project.mLRegression.CrossValidation
   * @generated
   */
  EClass getCrossValidation();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.CrossValidation#getK <em>K</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>K</em>'.
   * @see m2.idm.project.mLRegression.CrossValidation#getK()
   * @see #getCrossValidation()
   * @generated
   */
  EAttribute getCrossValidation_K();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.Algo <em>Algo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Algo</em>'.
   * @see m2.idm.project.mLRegression.Algo
   * @generated
   */
  EClass getAlgo();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.Algo#getAlgo <em>Algo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Algo</em>'.
   * @see m2.idm.project.mLRegression.Algo#getAlgo()
   * @see #getAlgo()
   * @generated
   */
  EAttribute getAlgo_Algo();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.Calculate <em>Calculate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Calculate</em>'.
   * @see m2.idm.project.mLRegression.Calculate
   * @generated
   */
  EClass getCalculate();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.Calculate#getCalculateType <em>Calculate Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Calculate Type</em>'.
   * @see m2.idm.project.mLRegression.Calculate#getCalculateType()
   * @see #getCalculate()
   * @generated
   */
  EAttribute getCalculate_CalculateType();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.Loop <em>Loop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loop</em>'.
   * @see m2.idm.project.mLRegression.Loop
   * @generated
   */
  EClass getLoop();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.Loop#getI <em>I</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>I</em>'.
   * @see m2.idm.project.mLRegression.Loop#getI()
   * @see #getLoop()
   * @generated
   */
  EAttribute getLoop_I();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.NumericValue <em>Numeric Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Numeric Value</em>'.
   * @see m2.idm.project.mLRegression.NumericValue
   * @generated
   */
  EClass getNumericValue();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.FLOAT <em>FLOAT</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>FLOAT</em>'.
   * @see m2.idm.project.mLRegression.FLOAT
   * @generated
   */
  EClass getFLOAT();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.FLOAT#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see m2.idm.project.mLRegression.FLOAT#getValue()
   * @see #getFLOAT()
   * @generated
   */
  EAttribute getFLOAT_Value();

  /**
   * Returns the meta object for the attribute '{@link m2.idm.project.mLRegression.FLOAT#getDecimal <em>Decimal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Decimal</em>'.
   * @see m2.idm.project.mLRegression.FLOAT#getDecimal()
   * @see #getFLOAT()
   * @generated
   */
  EAttribute getFLOAT_Decimal();

  /**
   * Returns the meta object for class '{@link m2.idm.project.mLRegression.PERCENT <em>PERCENT</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>PERCENT</em>'.
   * @see m2.idm.project.mLRegression.PERCENT
   * @generated
   */
  EClass getPERCENT();

  /**
   * Returns the meta object for the containment reference '{@link m2.idm.project.mLRegression.PERCENT#getFloat <em>Float</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Float</em>'.
   * @see m2.idm.project.mLRegression.PERCENT#getFloat()
   * @see #getPERCENT()
   * @generated
   */
  EReference getPERCENT_Float();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MLRegressionFactory getMLRegressionFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.ModelImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Language Target</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__LANGUAGE_TARGET = eINSTANCE.getModel_LanguageTarget();

    /**
     * The meta object literal for the '<em><b>Ml</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__ML = eINSTANCE.getModel_Ml();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.LanguageTargetImpl <em>Language Target</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.LanguageTargetImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getLanguageTarget()
     * @generated
     */
    EClass LANGUAGE_TARGET = eINSTANCE.getLanguageTarget();

    /**
     * The meta object literal for the '<em><b>Language</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LANGUAGE_TARGET__LANGUAGE = eINSTANCE.getLanguageTarget_Language();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.MLRegressionImpl <em>ML Regression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.MLRegressionImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getMLRegression()
     * @generated
     */
    EClass ML_REGRESSION = eINSTANCE.getMLRegression();

    /**
     * The meta object literal for the '<em><b>Dataset</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ML_REGRESSION__DATASET = eINSTANCE.getMLRegression_Dataset();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ML_REGRESSION__VARS = eINSTANCE.getMLRegression_Vars();

    /**
     * The meta object literal for the '<em><b>Evaluation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ML_REGRESSION__EVALUATION = eINSTANCE.getMLRegression_Evaluation();

    /**
     * The meta object literal for the '<em><b>Algo</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ML_REGRESSION__ALGO = eINSTANCE.getMLRegression_Algo();

    /**
     * The meta object literal for the '<em><b>Calculate</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ML_REGRESSION__CALCULATE = eINSTANCE.getMLRegression_Calculate();

    /**
     * The meta object literal for the '<em><b>Loop</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ML_REGRESSION__LOOP = eINSTANCE.getMLRegression_Loop();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.DatasetImpl <em>Dataset</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.DatasetImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getDataset()
     * @generated
     */
    EClass DATASET = eINSTANCE.getDataset();

    /**
     * The meta object literal for the '<em><b>Data Path</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DATASET__DATA_PATH = eINSTANCE.getDataset_DataPath();

    /**
     * The meta object literal for the '<em><b>Separator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DATASET__SEPARATOR = eINSTANCE.getDataset_Separator();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.VariablesImpl <em>Variables</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.VariablesImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getVariables()
     * @generated
     */
    EClass VARIABLES = eINSTANCE.getVariables();

    /**
     * The meta object literal for the '<em><b>Predictives</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLES__PREDICTIVES = eINSTANCE.getVariables_Predictives();

    /**
     * The meta object literal for the '<em><b>Targets</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLES__TARGETS = eINSTANCE.getVariables_Targets();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.PredictiveVarsImpl <em>Predictive Vars</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.PredictiveVarsImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getPredictiveVars()
     * @generated
     */
    EClass PREDICTIVE_VARS = eINSTANCE.getPredictiveVars();

    /**
     * The meta object literal for the '<em><b>Pred Var</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PREDICTIVE_VARS__PRED_VAR = eINSTANCE.getPredictiveVars_PredVar();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.TargetVarsImpl <em>Target Vars</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.TargetVarsImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getTargetVars()
     * @generated
     */
    EClass TARGET_VARS = eINSTANCE.getTargetVars();

    /**
     * The meta object literal for the '<em><b>Target Var</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TARGET_VARS__TARGET_VAR = eINSTANCE.getTargetVars_TargetVar();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.EvaluationTypeImpl <em>Evaluation Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.EvaluationTypeImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getEvaluationType()
     * @generated
     */
    EClass EVALUATION_TYPE = eINSTANCE.getEvaluationType();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.PartitionImpl <em>Partition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.PartitionImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getPartition()
     * @generated
     */
    EClass PARTITION = eINSTANCE.getPartition();

    /**
     * The meta object literal for the '<em><b>Test</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARTITION__TEST = eINSTANCE.getPartition_Test();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.CrossValidationImpl <em>Cross Validation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.CrossValidationImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getCrossValidation()
     * @generated
     */
    EClass CROSS_VALIDATION = eINSTANCE.getCrossValidation();

    /**
     * The meta object literal for the '<em><b>K</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CROSS_VALIDATION__K = eINSTANCE.getCrossValidation_K();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.AlgoImpl <em>Algo</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.AlgoImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getAlgo()
     * @generated
     */
    EClass ALGO = eINSTANCE.getAlgo();

    /**
     * The meta object literal for the '<em><b>Algo</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALGO__ALGO = eINSTANCE.getAlgo_Algo();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.CalculateImpl <em>Calculate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.CalculateImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getCalculate()
     * @generated
     */
    EClass CALCULATE = eINSTANCE.getCalculate();

    /**
     * The meta object literal for the '<em><b>Calculate Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCULATE__CALCULATE_TYPE = eINSTANCE.getCalculate_CalculateType();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.LoopImpl <em>Loop</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.LoopImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getLoop()
     * @generated
     */
    EClass LOOP = eINSTANCE.getLoop();

    /**
     * The meta object literal for the '<em><b>I</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOP__I = eINSTANCE.getLoop_I();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.NumericValueImpl <em>Numeric Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.NumericValueImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getNumericValue()
     * @generated
     */
    EClass NUMERIC_VALUE = eINSTANCE.getNumericValue();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.FLOATImpl <em>FLOAT</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.FLOATImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getFLOAT()
     * @generated
     */
    EClass FLOAT = eINSTANCE.getFLOAT();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLOAT__VALUE = eINSTANCE.getFLOAT_Value();

    /**
     * The meta object literal for the '<em><b>Decimal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLOAT__DECIMAL = eINSTANCE.getFLOAT_Decimal();

    /**
     * The meta object literal for the '{@link m2.idm.project.mLRegression.impl.PERCENTImpl <em>PERCENT</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see m2.idm.project.mLRegression.impl.PERCENTImpl
     * @see m2.idm.project.mLRegression.impl.MLRegressionPackageImpl#getPERCENT()
     * @generated
     */
    EClass PERCENT = eINSTANCE.getPERCENT();

    /**
     * The meta object literal for the '<em><b>Float</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PERCENT__FLOAT = eINSTANCE.getPERCENT_Float();

  }

} //MLRegressionPackage
