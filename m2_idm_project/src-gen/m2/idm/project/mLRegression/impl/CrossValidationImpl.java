/**
 * generated by Xtext 2.23.0
 */
package m2.idm.project.mLRegression.impl;

import m2.idm.project.mLRegression.CrossValidation;
import m2.idm.project.mLRegression.MLRegressionPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cross Validation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link m2.idm.project.mLRegression.impl.CrossValidationImpl#getC <em>C</em>}</li>
 *   <li>{@link m2.idm.project.mLRegression.impl.CrossValidationImpl#getRandomState <em>Random State</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CrossValidationImpl extends EvaluationTypeImpl implements CrossValidation
{
  /**
   * The default value of the '{@link #getC() <em>C</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getC()
   * @generated
   * @ordered
   */
  protected static final int C_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getC() <em>C</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getC()
   * @generated
   * @ordered
   */
  protected int c = C_EDEFAULT;

  /**
   * The default value of the '{@link #getRandomState() <em>Random State</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRandomState()
   * @generated
   * @ordered
   */
  protected static final int RANDOM_STATE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRandomState() <em>Random State</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRandomState()
   * @generated
   * @ordered
   */
  protected int randomState = RANDOM_STATE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CrossValidationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MLRegressionPackage.Literals.CROSS_VALIDATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getC()
  {
    return c;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setC(int newC)
  {
    int oldC = c;
    c = newC;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLRegressionPackage.CROSS_VALIDATION__C, oldC, c));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRandomState()
  {
    return randomState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRandomState(int newRandomState)
  {
    int oldRandomState = randomState;
    randomState = newRandomState;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLRegressionPackage.CROSS_VALIDATION__RANDOM_STATE, oldRandomState, randomState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MLRegressionPackage.CROSS_VALIDATION__C:
        return getC();
      case MLRegressionPackage.CROSS_VALIDATION__RANDOM_STATE:
        return getRandomState();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MLRegressionPackage.CROSS_VALIDATION__C:
        setC((Integer)newValue);
        return;
      case MLRegressionPackage.CROSS_VALIDATION__RANDOM_STATE:
        setRandomState((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MLRegressionPackage.CROSS_VALIDATION__C:
        setC(C_EDEFAULT);
        return;
      case MLRegressionPackage.CROSS_VALIDATION__RANDOM_STATE:
        setRandomState(RANDOM_STATE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MLRegressionPackage.CROSS_VALIDATION__C:
        return c != C_EDEFAULT;
      case MLRegressionPackage.CROSS_VALIDATION__RANDOM_STATE:
        return randomState != RANDOM_STATE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (c: ");
    result.append(c);
    result.append(", randomState: ");
    result.append(randomState);
    result.append(')');
    return result.toString();
  }

} //CrossValidationImpl
