grammar m2.idm.project.MLRegression with org.eclipse.xtext.common.Terminals

generate mLRegression "http://www.idm.m2/project/MLRegression"

MLRegression:
	dataset=Dataset
	evaluation = EvaluationType
    (vars = Variables) ?
    calculate = Calculate
    algo = Algo
;


Calculate :
	'calculate' ':' calculateType=CalculateType ';'
;

CalculateType :
	MinError | MinSquaredError | SumsSquaredError
;

Dataset:
	dataset = 'import' data=StringValue ';'
;


EvaluationType :
	Partition | CrossValidation
;

Partition : 
    'partition' ':' train=NumericValue ',' test=NumericValue ';'
;

CrossValidation :
    'cross_validation' ':' k=IntegerValue ';'
;


Variables: 
	predictives=ListePredictiveVar targets=TargetVar 
;

ListePredictiveVar : 
    'predictive_vars' ':' vars+=STRING(','vars+=STRING)* ';'
;

 

TargetVar : 
    'target_var' ':' var=StringValue ';'
;

Algo :
	'algorithm' ':' algo=AlgoML ';'
;

AlgoML : 
    LineRegress | SVR | DecisionTreeRegressor
;

LineRegress :
    'line_regress' '('columns+=STRING (',' columns+=STRING)* ')'
;

DecisionTreeRegressor : 
    'decision_tree_regressor' '(' rand=INT ')'
;
 
SVR : 
    'svr' '(' param=ID ')'
;


MinError : 
	'min_error'
;

 

MinSquaredError :
	'min_square_error' 
;

 

SumsSquaredError : 
	'sums_square_error'
;


TypeValue:
	StringValue | NumericValue | PercentValue | BooleanValue
;

StringValue: 
	value=STRING
;

NumericValue:
	NumberValue | PercentValue
;

NumberValue:
	value=INT ('.' (decimal+=INT)*)?
;

IntegerValue:
	value=INT
;

PercentValue:
	NumberValue '%'
;

BooleanValue :
	value = ('false' | 'true')
;
